#DF-01 Arpeggigator
#Coded by Davids Fiddle

do_sync = :e
live_loop :get_sync do
  val = sync '/01_sync'
  do_sync = :h if val[0] == 0
  do_sync = :q if val[0] == 1
  do_sync = :e if val[0] == 2
  do_sync = :s if val[0] == 3
end
mode = 1
live_loop :get_mode do
  val = sync '/01_mode'
  mode = val[0]
end
root = :c3
live_loop :get_root do
  val = sync '/01_root'
  root = val[0]
end
type = :major
live_loop :get_type do
  val = sync '/01_type'
  type = :major if val[0] == 0
  type = :minor if val[0] == 1
  type = :augmented if val[0] == 2
  type = :diminished if val[0] == 3
  type = :major7 if val[0] == 4
  type = :minor7 if val[0] == 5
  type = :sus2 if val[0] == 6
  type = :sus4 if val[0] == 7
end
length = 8
live_loop :get_length do
  val = sync '/01_length'
  length = 8 if val[0] == 0
  length = 16 if val[0] == 1
end
n0 = 60
n1 = 60
n2 = 60
n3 = 60
n4 = 60
n5 = 60
n6 = 60
n7 = 60
n8 = 60
n9 = 60
n10 = 60
n11 = 60
n12 = 60
n13 = 60
n14 = 60
n15 = 60
live_loop :get_n0 do
  val = sync '/01_n0'
  n0 = val[0]
end
live_loop :get_n1 do
  val = sync '/01_n1'
  n1 = val[0]
end
live_loop :get_n2 do
  val = sync '/01_n2'
  n2 = val[0]
end
live_loop :get_n3 do
  val = sync '/01_n3'
  n3 = val[0]
end
live_loop :get_n4 do
  val = sync '/01_n4'
  n4 = val[0]
end
live_loop :get_n5 do
  val = sync '/01_n5'
  n5 = val[0]
end
live_loop :get_n6 do
  val = sync '/01_n6'
  n6 = val[0]
end
live_loop :get_n7 do
  val = sync '/01_n7'
  n7 = val[0]
end
live_loop :get_n8 do
  val = sync '/01_n8'
  n8 = val[0]
end
live_loop :get_n9 do
  val = sync '/01_n9'
  n9 = val[0]
end
live_loop :get_n10 do
  val = sync '/01_n10'
  n10 = val[0]
end
live_loop :get_n12 do
  val = sync '/01_n12'
  n12 = val[0]
end
live_loop :get_n13 do
  val = sync '/01_n13'
  n13 = val[0]
end
live_loop :get_n14 do
  val = sync '/01_n14'
  n14 = val[0]
end
live_loop :get_n15 do
  val = sync '/01_n15'
  n15 = val[0]
end

att = 0
live_loop :get_att do
  val = sync '/01_att'
  att = val[0]
end
sus = 0
live_loop :get_sus do
  val = sync '/01_sus'
  sus = val[0]
end
rel = 0.25
live_loop :get_rel do
  val = sync '/01_rel'
  rel = val[0]
end
vol = 1
live_loop :get_vol do
  val = sync '/01_vol'
  vol = val[0]
end
do_synth = :beep
live_loop :get_synth do
  val = sync '/01_synth'
  do_synth = :beep if val[0] == 0
  do_synth = :blade if val[0] == 1
  do_synth = :prophet if val[0] == 2
  do_synth = :tb303 if val[0] == 3
  do_synth = :hoover if val[0] == 4
  do_synth = :growl if val[0] == 5
  do_synth = :tech_saws if val[0] == 6
  do_synth = :piano if val[0] == 7
  do_synth = :pluck if val[0] == 8
  do_synth = :pretty_bell if val[0] == 9
end
do_bpm = 120
live_loop :get_bpm do
  val = sync '/01_bpm'
  do_bpm = val[0]
end

#This is a clock divider
c_s = 0
c_e = 0
c_q = 0
c_h = 0
live_loop :clock do
  with_bpm do_bpm do
    cue :h, c_h
    c_h = c_h + 1
    cue :q, c_q
    c_q = c_q + 1
    cue :e, c_e
    c_e = c_e + 1
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :e, c_e
    c_e = c_e + 1
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :q, c_q
    c_q = c_q + 1
    cue :e, c_e
    c_e = c_e + 1
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :e, c_e
    c_e = c_e + 1
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
    cue :s, c_s
    c_s = c_s + 1
    sleep 0.25
  end
end


live_loop :arp do
  use_synth do_synth
  use_synth_defaults attack: att, sustain: sus, release: rel, amp: vol
  val = sync do_sync
  play (ring n0,n1,n2,n3,n4,n5,n6,n7,n8,n9,n10,n11,n12,n13,n14,n15).take(length)[val[0]] if mode == 0
  play (chord root, type, num_octaves: 6).take(length)[val[0]] if mode == 1
end
