//DF-01 Arpeggigator
//Coded by Davids Fiddle
//v0.1


import oscP5.*;                   //Needs oscP5 and controlP5 libraries
import netP5.*;                   
import controlP5.*;

OscP5 oscP5;                      //Communication
NetAddress sonicPi;               //where the messages go
ControlP5 cp5;                    //Interface

boolean enableComms = true;

PFont pfont12, pfont20;

void setup() {

  size(1000, 500, P3D);  //set up window
  smooth();    
  //Network adress to communicate with Sonic Pi
  oscP5 = new OscP5(this, 8000);                  
  sonicPi = new NetAddress("127.0.0.1", 4559);
  //Creating Fonts
  pfont20 = createFont("Georgia", 20, true);
  pfont12 = createFont("Georgia", 12, true);

  createUI();                              
  enableComms = true;
}

//Methods for sending key/value to Sonic Pi
void sendOsc(String name, int value) {
  OscMessage toSend = new OscMessage("/" + name);
  toSend.add((int)value);
  oscP5.send(toSend, sonicPi);
}
void sendOsc(String name, float value) {
  OscMessage toSend = new OscMessage("/" + name);
  toSend.add((float)value);
  oscP5.send(toSend, sonicPi);
}

//fill in the Background
void draw() {
  background(30);
  drawBackground();
}

//Draw all lines
void drawBackground() {
  fill(0);

  stroke(255);
  line(0, 100, 1000, 100);
  line(300, 0, 300, 100);
  line(800, 0, 800, 100);
  line(700, 0, 700, 100);
  line(600, 0, 600, 100);
  line(500, 0, 500, 100);
  line(400, 100, 400, 400);
  line(800, 100, 800, 400);
  line(0, 400, 1000, 400);
  line(300, 400, 300, 500);
}

void createUI() {
  //Initialising Fonts
  ControlFont fontl = new ControlFont(pfont20);
  ControlFont fonts = new ControlFont(pfont12);

  //create canvas for the controls
  cp5 = new ControlP5(this);


  //Labels
  cp5.addTextlabel("title").setText("DF-01 Arpeggigator \nby Davids Fiddle").setPosition(25, 25).setFont(fontl);
  cp5.addTextlabel("thanks").setText("Running with Sonic Pi\nby Sam Aaron\nand Processing 3\nby Ben Fry and Casey Reas").setPosition(825, 25).setFont(fonts);
  cp5.addTextlabel("Version").setText("v0.9").setPosition(250, 75).setFont(fonts);

  //volume
  cp5.addKnob("amp").setRange(0, 2.0).setValue(1.0).setPosition(325, 25).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("Volume").setDecimalPrecision(2).setFont(fonts);
  //bpm
  cp5.addKnob("bpm").setRange(52, 220).setValue(120).setPosition(425, 25).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("BPM").setDecimalPrecision(1).setFont(fonts);
  //sync
  cp5.addRadioButton("sync").setPosition(500, 000).setItemsPerRow(2).setItemWidth(49).setItemHeight(49)
    .addItem("H", 0).addItem("Q", 1).addItem("E", 2).addItem("S", 3).align(CENTER, CENTER)
    .activate(2).setNoneSelectedAllowed(false);
  //mode
  cp5.addRadioButton("mode").setPosition(600, 000).setItemsPerRow(1).setItemWidth(99).setItemHeight(49)
    .addItem("Sequencer", 0).addItem("Chord", 1).align(CENTER, CENTER)
    .activate(1).setNoneSelectedAllowed(false);
  //length
  cp5.addRadioButton("len").setPosition(700, 000).setItemsPerRow(1).setItemWidth(99).setItemHeight(49)
    .addItem("8", 0).addItem("16", 1).align(CENTER, CENTER)
    .activate(0).setNoneSelectedAllowed(false);

  cp5.addSlider("n0").setPosition(0, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 0").setDecimalPrecision(1);
  cp5.addSlider("n1").setPosition(50, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 1").setDecimalPrecision(1);
  cp5.addSlider("n2").setPosition(100, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 2").setDecimalPrecision(1);
  cp5.addSlider("n3").setPosition(150, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 3").setDecimalPrecision(1);
  cp5.addSlider("n4").setPosition(200, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 4").setDecimalPrecision(1);
  cp5.addSlider("n5").setPosition(250, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 5").setDecimalPrecision(1);
  cp5.addSlider("n6").setPosition(300, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 6").setDecimalPrecision(1);
  cp5.addSlider("n7").setPosition(350, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 7").setDecimalPrecision(1);
  cp5.addSlider("n8").setPosition(400, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 8").setDecimalPrecision(1);
  cp5.addSlider("n9").setPosition(450, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 9").setDecimalPrecision(1);
  cp5.addSlider("n10").setPosition(500, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 10").setDecimalPrecision(1);
  cp5.addSlider("n11").setPosition(550, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 11").setDecimalPrecision(1);
  cp5.addSlider("n12").setPosition(600, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 12").setDecimalPrecision(1);
  cp5.addSlider("n13").setPosition(650, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 13").setDecimalPrecision(1);
  cp5.addSlider("n14").setPosition(700, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 14").setDecimalPrecision(1);
  cp5.addSlider("n15").setPosition(750, 100).setSize(25, 270).setRange(0, 120).setValue(60).setLabel(" 15").setDecimalPrecision(1);

  //Type
  cp5.addRadioButton("type").setPosition(800, 100).setItemsPerRow(2).setItemWidth(99).setItemHeight(49)
    .addItem("Major", 0).addItem("Minor", 1).addItem("Augmented", 2).addItem("Diminished", 3)
    .addItem("Major7", 4).addItem("Minor7", 5).addItem("Sus2", 6).addItem("Sus4", 7).align(CENTER, CENTER)
    .activate(0).setNoneSelectedAllowed(false);
  //Root
  cp5.addKnob("root").setRange(0, 120).setValue(60).setPosition(825, 325).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("Root").setDecimalPrecision(1).setFont(fonts);

  //ASR
  cp5.addKnob("att").setRange(0, 1).setValue(0).setPosition(25, 425).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("Attack").setDecimalPrecision(2).setFont(fonts);
  cp5.addKnob("sus").setRange(0, 2).setValue(0).setPosition(125, 425).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("Sustain").setDecimalPrecision(2).setFont(fonts);
  cp5.addKnob("dec").setRange(0, 2).setValue(0.25).setPosition(225, 425).setRadius(25).setDragDirection(Knob.HORIZONTAL).setLabel("Release").setDecimalPrecision(2).setFont(fonts);

  //Synth
  cp5.addRadioButton("synth").setPosition(300, 400).setItemsPerRow(5).setItemWidth(99).setItemHeight(49)
    .addItem("Beep", 0).addItem("Blade", 1).addItem("Prophet", 2).addItem("TB-303", 3)
    .addItem("Hoover", 4).addItem("Growl", 5).addItem("Tech Saw", 6).addItem("Piano", 7)
    .addItem("Pluck", 8).addItem("Bell", 9).align(CENTER, CENTER)
    .activate(0).setNoneSelectedAllowed(false);

  /*
  //Primary Synth Control
   cp5.addKnob("note").setRange(0, 140).setValue(60).setPosition(325, 25).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Note").setDecimalPrecision(0).setFont(fonts);
   cp5.addKnob("octaves").setRange(0, 2.0).setValue(1.0).setPosition(425, 25).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Num. Octaves").setDecimalPrecision(2).setFont(fonts);
   cp5.addRadioButton("primaryChord").setPosition(200, 100).setItemsPerRow(3).setItemWidth(99).setItemHeight(50)
   .addItem("Root", 0).addItem("Fifth", 1).addItem("Major", 2).addItem("Minor", 3).align(CENTER, CENTER)
   .activate(0).setNoneSelectedAllowed(false);
   
   
   //Sources
   cp5.addRadioButton("primarySource").setPosition(0, 400).setItemsPerRow(4).setItemWidth(99).setItemHeight(50)
   .addItem("0", 0).addItem("1", 1).addItem("2", 2).addItem("3", 3).align(CENTER, CENTER)
   .activate(0).setNoneSelectedAllowed(false);
   cp5.addRadioButton("secondarySource").setPosition(0, 500).setItemsPerRow(4).setItemWidth(74).setItemHeight(50)
   .addItem("0 ", 0).addItem("1 ", 1).addItem("2 ", 2).addItem("3 ", 3).align(CENTER, CENTER)
   .activate(0).setNoneSelectedAllowed(false);
   
   //Secondary Synth Control
   cp5.addKnob("amp2").setRange(0, 2.0).setValue(0.0).setPosition(325, 525).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Volume 2").setDecimalPrecision(2).setFont(fonts);
   cp5.addKnob("note2").setRange(-24, 24).setValue(0).setPosition(425, 525).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Note 2").setDecimalPrecision(0).setFont(fonts);
   cp5.addKnob("spread").setRange(0, 24).setValue(0).setPosition(525, 525).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Spread 2").setDecimalPrecision(2).setFont(fonts);
   cp5.addKnob("time").setRange(4, 16).setValue(8).setPosition(625, 525).setRadius(25).setDragDirection(Knob.VERTICAL).setLabel("Time 2").setDecimalPrecision(2).setFont(fonts);
   */
}


//Sending osc-messages
void amp (float Value) {
  sendOsc("01_vol", Value);
}
void bpm (int Value) {
  sendOsc("01_bpm", Value);
}
void sync (int Value) {
  sendOsc("01_sync", Value);
}
void mode (int Value) {
  sendOsc("01_mode", Value);
}
void len (int Value) {
  sendOsc("01_length", Value);
}
void n0 (int Value) {
  sendOsc("01_n0", Value);
}
void n1 (int Value) {
  sendOsc("01_n1", Value);
}
void n2 (int Value) {
  sendOsc("01_n2", Value);
}
void n3 (int Value) {
  sendOsc("01_n3", Value);
}
void n4 (int Value) {
  sendOsc("01_n4", Value);
}
void n5 (int Value) {
  sendOsc("01_n5", Value);
}
void n6 (int Value) {
  sendOsc("01_n6", Value);
}
void n7 (int Value) {
  sendOsc("01_n7", Value);
}
void n8 (int Value) {
  sendOsc("01_n8", Value);
}
void n9 (int Value) {
  sendOsc("01_n9", Value);
}
void n10 (int Value) {
  sendOsc("01_n10", Value);
}
void n11 (int Value) {
  sendOsc("01_n11", Value);
}
void n12 (int Value) {
  sendOsc("01_n12", Value);
}
void n13 (int Value) {
  sendOsc("01_n13", Value);
}
void n14 (int Value) {
  sendOsc("01_n14", Value);
}
void n15 (int Value) {
  sendOsc("01_n15", Value);
}
void root (int Value) {
  sendOsc("01_root", Value);
}
void type (int Value) {
  sendOsc("01_type", Value);
}
void att (float Value) {
  sendOsc("01_att", Value);
}
void sus (float Value) {
  sendOsc("01_sus", Value);
}
void rel (float Value) {
  sendOsc("01_rel", Value);
}
void synth (int Value) {
  sendOsc("01_synth", Value);
}
