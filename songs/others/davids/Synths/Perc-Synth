#Percussive Synth
#Coded by Davids Fiddle
#v0.9

#To Do:
#More Testing!
#Comments & Documentation 1.0

#Midi adress to use.
#To specify a device or channel.
midi_on = "/midi/*/*/2/note_on"
#Variables for voices:
#Transposition for the voices
trans0 = 0
trans1 = 12
trans2 = 0
trans3 = 12
#Volume for the voices
amp0 = 1
amp1 = 1
amp2 = 0.7
amp3 = 0.5
#Synth for the voices
syn0 = :piano
syn1 = :piano
syn2 = :piano
syn3 = :piano
#Release time for the other synths
#Update is in the FX loop
rel = 1
att = 0
#Preset Types, 1 for piano,3 for pluck, 5 for synth, -1 for empty
presets = [1,5,5,1,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,]
midi_note_on 0,presets[0] + 1,channel: 1
#Reset the lights on the APC
define :lights do
  for x in (range 0,16)  #Adapt to your APC
    #midi_note_on x,0,channel: 1
    midi_note_on x,presets[x],channel: 1
  end
end  #:lights
lights

#Preset Section
live_loop :presets do
  key,vel = sync "/midi/apc_key_25/0/1/note_on"
  if key << 40
    lights
    #Every key triggers a different preset
    if key == 0
      puts "Initial Piano"
      trans0 = 0
      trans1 = 12
      trans2 = 0
      trans3 = 12
      amp0 = 1
      amp1 = 1
      amp2 = 0.7
      amp3 = 0.5
      syn0 = :piano
      syn1 = :piano
      syn2 = :piano
      syn3 = :piano
    elsif key == 1
      puts "Synth 1"
      trans0 = 0
      trans1 = 12
      trans2 = 0
      trans3 = 12
      amp0 = 1
      amp1 = 1
      amp2 = 0.7
      amp3 = 0.5
      syn0 = :saw
      syn1 = :saw
      syn2 = :saw
      syn3 = :tri
    elsif key == 2
      puts "Synth 2"
      trans0 = 0
      trans1 = 7
      trans2 = 12
      trans3 = 0
      amp0 = 1
      amp1 = 0.5
      amp2 = 0.7
      amp3 = 1
      syn0 = :saw
      syn1 = :saw
      syn2 = :saw
      syn3 = :tri
    elsif key == 3
      puts "Big Piano"
      trans0 = 0
      trans1 = 12
      trans2 = 7
      trans3 = 12
      amp0 = 1
      amp1 = 1
      amp2 = 0.7
      amp3 = 0.5
      syn0 = :piano
      syn1 = :piano
      syn2 = :piano
      syn3 = :piano
    elsif key == 4
      puts "Basic Pluck"
      trans0 = 0
      trans1 = 12
      trans2 = 7
      trans3 = 12
      amp0 = 1
      amp1 = 1
      amp2 = 0.7
      amp3 = 0.5
      syn0 = :pluck
      syn1 = :pluck
      syn2 = :pluck
      syn3 = :pluck
    elsif key == 5
      #puts "Empty"
    elsif key == 6
      #puts "Empty"
    elsif key == 7
      #puts "Empty"
    elsif key == 8
      #puts "Empty"
    elsif key == 9
      #puts "Empty"
    elsif key == 10
      #puts "Empty"
    elsif key == 11
      #puts "Empty"
    elsif key == 12
      #puts "Empty"
    elsif key == 13
      #puts "Empty"
    elsif key == 14
      #puts "Empty"
    elsif key == 15
      #puts "Empty"
    end
    sleep 0.1
    midi_note_on key,presets[key] + 1,channel: 1
  end
end  #:presets

#FX Section
with_fx :reverb, mix: 0, room: 0.9922 do |verb|
  with_fx :echo, mix: 0, phase: 2.0344, decay: 8 do |echo|
    with_fx :ixi_techno, mix: 0, phase: 7.9875 do |tech|
      #This loop handles the fx controls
      live_loop :con_fx do
        use_real_time
        key,val = sync "/midi/*/*/*/control_change"
        if key == 52
          control echo, mix: val / 128.0
        elsif key == 53
          control echo, phase: val / 64.0 + 0.05
        elsif key == 54
          control verb, mix: val / 128.0
        elsif key == 55
          control echo, room: val / 128.0
        elsif key == 48
          att = val / 256.0
        elsif key == 49
          rel = val / 128.0
        elsif key == 50
          control tech, mix: val / 128.0
        elsif key == 51
          control tech, phase: val / 16.0 + 0.05
        end
      end  #:con_fx
      live_loop :voices do
        use_synth_defaults sustain: 0, release: rel, attack: att
        use_real_time
        key,vel = sync midi_on  #Listen for any MIDI-on message
        if vel != 0
          synth syn0, note: key + trans0, amp: amp0
          synth syn1, note: key + trans1, amp: amp1
          synth syn2, note: key + trans2, amp: amp2
          synth syn3, note: key + trans3, amp: amp3
        end
      end  #:voices
    end  #:ixi_techno
  end  #:echo
end  #:reverb
